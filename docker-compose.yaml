name: crack-hash-2

version: '3.4'
services:
  manager:
    build:
      context: .
      dockerfile: ./manager/Dockerfile

    ports:
      - "13001:8000"

    environment:
      - MANAGER_SERVER_HOST=0.0.0.0
      - MANAGER_SERVER_PORT=8000
      - MANAGER_WORKERS_TASK_SIZE=10000000
      - MANAGER_WORKERS_LIST=worker-1:8000:worker-2:8000
      - MANAGER_MONGO_CONNSTR=mongodb://mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0
      - MANAGER_MONGO_DBNAME=crack_hash


  worker-1:
    build:
      context: .
      dockerfile: ./worker/Dockerfile

    ports:
      - "13002:8000"

    environment:
      - WORKER_SERVER_HOST=0.0.0.0
      - WORKER_SERVER_PORT=8000
      - WORKER_MANAGER_HOST=manager
      - WORKER_MANAGER_PORT=8000

  worker-2:
    build:
      context: .
      dockerfile: ./worker/Dockerfile

    ports:
      - "13003:8000"

    environment:
      - WORKER_SERVER_HOST=0.0.0.0
      - WORKER_SERVER_PORT=8000
      - WORKER_MANAGER_HOST=manager
      - WORKER_MANAGER_PORT=8000

  mongo1:
    image: mongo:7.0
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=crack_hash
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo1:27017',priority:1},{_id:1,host:'mongo2:27018',priority:0.5},{_id:2,host:'mongo3:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      retries: 30
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"

  mongo2:
     image: mongo:7.0
     command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27018" ]
     ports:
       - "27018:27018"
     environment:
       - MONGO_INITDB_DATABASE=crack_hash
     volumes:
       - "mongo2_data:/data/db"
       - "mongo2_config:/data/configdb"

  mongo3:
    image: mongo:7.0
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27019" ]
    ports:
      - "27019:27019"
    environment:
      - MONGO_INITDB_DATABASE=crack_hash
    volumes:
      - "mongo3_data:/data/db"
      - "mongo3_config:/data/configdb"

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo1_config:
  mongo2_config:
  mongo3_config:
